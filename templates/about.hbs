{{> head pageTitle=(concat "About - " title)}}

{{> meta
    ogType="profile"
    ogUrl=(concat url "/about")
    ogTitle=(concat "About - " title)
    ogDescription=(concat "Learn more about " author " and " title)
    twitterUrl=(concat url "/about")
    twitterTitle=(concat "About - " title)
    twitterDescription=(concat "Learn more about " author " and " title)
}}

{{> structured-data structuredData=true isArticle=false}}
<body class="bg-white text-slate-900 dark:bg-bg-01 dark:text-slate-100 leading-relaxed">
    <!-- Theme transition overlay -->
    <div class="theme-transition" id="theme-transition"></div>

    {{> header}}

    <main class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <section class="mb-8">
            <div class="text-center mb-8">
                <h1 class="text-3xl sm:text-4xl font-bold text-slate-900 dark:text-slate-100 mb-4">
                    About {{author}}
                </h1>
                <p class="text-lg text-slate-600 dark:text-slate-400 max-w-2xl mx-auto">
                    Learn more about the person behind {{title}}
                </p>
            </div>
        </section>

        <section class="prose-custom max-w-3xl mx-auto">
            <!-- Author Profile -->
            <div class="bg-slate-50 dark:bg-slate-800/50 rounded-lg p-6 mb-8">
                <div class="flex items-start gap-4">
                    <div class="flex-shrink-0">
                        <img src="/public/images/avatar.jpeg" alt="{{author}}'s avatar" class="w-16 h-16 rounded-full object-cover border-2 border-slate-200 dark:border-slate-600">
                    </div>
                    <div class="flex-1">
                        <h2 class="text-xl font-semibold text-slate-900 dark:text-slate-100 mb-2">{{author}}</h2>
                        <p class="text-slate-600 dark:text-slate-400 mb-4">
                            Senior Software Engineer @ <a href="https://www.epignosishq.com" target="_blank" rel="noopener noreferrer">Epignosis</a>
                        </p>
                        <div class="flex gap-3">
                            {{#if social.github}}
                            <a href="https://github.com/{{social.github}}" target="_blank" rel="noopener noreferrer" 
                               class="inline-flex items-center gap-2 px-3 py-2 bg-slate-100 dark:bg-slate-700 text-slate-700 dark:text-slate-300 rounded-md hover:bg-slate-200 dark:hover:bg-slate-600 transition-colors">
                                <i class="fab fa-github"></i>
                                GitHub
                            </a>
                            {{/if}}
                            {{#if social.linkedin}}
                            <a href="https://linkedin.com/in/{{social.linkedin}}" target="_blank" rel="noopener noreferrer"
                               class="inline-flex items-center gap-2 px-3 py-2 bg-slate-100 dark:bg-slate-700 text-slate-700 dark:text-slate-300 rounded-md hover:bg-slate-200 dark:hover:bg-slate-600 transition-colors">
                                <i class="fab fa-linkedin"></i>
                                LinkedIn
                            </a>
                            {{/if}}
                        </div>
                    </div>
                </div>
            </div>

            <!-- About Content -->
            <div class="space-y-6">
                <div>
                    <h2 class="text-2xl font-bold text-slate-900 dark:text-slate-100 mb-4">Who I Am</h2>
                    <p class="text-slate-700 dark:text-slate-300 leading-relaxed">
                        Hi, I'm Alex, the person behind Binary Brew, and I've been writing code professionally for over a decade.
                        But if we're being honest, my first lines of code were typed nearly 30 years ago in 1995 - Visual Basic,
                        of all things. Jesus, that's a lifetime.
                    </p>
                    <p class="text-slate-700 dark:text-slate-300 leading-relaxed">
                        It all started with a SNES and Donkey Kong Country under the Christmas tree in '94. 
                        I decided right then that I wanted to make games when I grew up. Spoiler alert: 
                        <strong>I never did.</strong> Impostor syndrome, life circumstances, and a healthy dose 
                        of self-doubt steered me elsewhere. But here's the thing - I picked up a TON along the way.
                        Today, I'm a Senior Software Engineer, Exorcist of Bugs, Mentor, and Father of two.
                    </p>
                </div>

                <div>                               
                    <h2 class="text-2xl font-bold text-slate-900 dark:text-slate-100 mb-4">What I Do (And Why I Do It)</h2>
                    <p class="text-slate-700 dark:text-slate-300 leading-relaxed">
                        Binary Brew lives at the intersection of two worlds: the technical and the human. On one side, 
                        you'll find me deep in the trenches of software engineering, debugging, and reverse engineering. 
                        On the other, I'm exploring the psychology of teams, management, and what makes us tick as people.
                    </p>
                    <p class="text-slate-700 dark:text-slate-300 leading-relaxed">                                                      00 leading-relaxed">
                        Beyond the 9-to-5 (or let's be real, the 3am debugging sessions when the baby wakes up 
                        for food and I can't fall back asleep), I code for fun. I write stories - social dramas that 
                        live on the edge of real life. I've published three books exploring the darkest corners of human
                        experience: procreation, self-medication, troubled minds, psychological trauma, loss. 
                        The stuff we don't always talk about but should.
                    </p>
                    <p class="text-slate-700 dark:text-slate-300 leading-relaxed">
                        From time to time, I compose music. Majestic, symphonic black metal, 
                        to be specific. Organized chaos with a purpose.
                    </p>
                    <p class="text-slate-700 dark:text-slate-300 leading-relaxed">
                        I started Binary Brew because I believe sharing is caring. The community gave me so much over the years. This is me giving back.
                    </p>
                </div>

                <div>
                    <h2 class="text-2xl font-bold text-slate-900 dark:text-slate-100 mb-4">What I Write About</h2>
                    <div class="grid gap-4 md:grid-cols-2">
                        <div class="bg-slate-50 dark:bg-slate-800/50 rounded-lg p-4">
    <h3 class="text-lg font-semibold text-slate-900 dark:text-slate-100 mb-2">
        <i class="fas fa-bug text-accent mr-2"></i>
        Exorcising Bugs
    </h3>
    <p class="text-slate-600 dark:text-slate-400 text-sm">
        Hit it until it bleeds out. Systematic exploration from user input to kernel level, 
        because sometimes the bug isn't where you think it is - and that's when it gets interesting.
    </p>
</div>

<div class="bg-slate-50 dark:bg-slate-800/50 rounded-lg p-4">
    <h3 class="text-lg font-semibold text-slate-900 dark:text-slate-100 mb-2">
        <i class="fas fa-users text-accent mr-2"></i>
        People & Teams
    </h3>
    <p class="text-slate-600 dark:text-slate-400 text-sm">
        Trust and respect are built over time but broken in an instant. Exploring the psychology 
        of teams, mentorship, and why managing humans is infinitely harder than debugging code.
    </p>
</div>

<div class="bg-slate-50 dark:bg-slate-800/50 rounded-lg p-4">
    <h3 class="text-lg font-semibold text-slate-900 dark:text-slate-100 mb-2">
        <i class="fas fa-road text-accent mr-2"></i>
        War Stories
    </h3>
    <p class="text-slate-600 dark:text-slate-400 text-sm">
        Adventures from the trenches, complete with dad jokes, bad humor, and the raw frustration 
        when something refuses to work. Real problems, real solutions, real mess.
    </p>
</div>

<div class="bg-slate-50 dark:bg-slate-800/50 rounded-lg p-4">
    <h3 class="text-lg font-semibold text-slate-900 dark:text-slate-100 mb-2">
        <i class="fas fa-graduation-cap text-accent mr-2"></i>
        Learning Out Loud
    </h3>
    <p class="text-slate-600 dark:text-slate-400 text-sm">
        Fail fast and often - it's the only way to win. Sharing knowledge because the community 
        gave me everything, and it's time to give back. You learn by teaching.
    </p>
</div>
                    </div>
                </div>

                <!-- Programming Languages Section -->
                <div>
                    <h2 class="text-2xl font-bold text-slate-900 dark:text-slate-100 mb-4">Programming Languages & Technologies</h2>
                    <p class="text-slate-700 dark:text-slate-300 leading-relaxed mb-6">
                        A real-time breakdown of the languages and technologies I work with, powered by WakaTime analytics.
                    </p>
                    
                    <div class="bg-slate-50 dark:bg-slate-800/50 rounded-lg p-6 mb-6">                                                
                        <div id="language-chart-container" class="flex justify-center">
                            <div id="loading" class="flex items-center justify-center min-h-[400px] text-slate-600 dark:text-slate-400">
                                <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mr-3"></div>
                                <span>Loading language data...</span>
                            </div>
                        </div>
                    </div>
                </div>

                <div>
                    <h2 class="text-2xl font-bold text-slate-900 dark:text-slate-100 mb-4">Get In Touch</h2>
                    <p class="text-slate-700 dark:text-slate-300 leading-relaxed mb-4">
                        Think I'm wrong about something? Good. Let's talk about it. The best conversations happen when we disagree respectfully and learn from each other. Challenge my approaches, question my decisions, bring your war stories to the table. I get the craft and the human working on it - and I want to hear your perspective too.
                    </p>
                    <div class="flex flex-wrap gap-3">
                        {{#if social.github}}
                        <a href="https://github.com/{{social.github}}" target="_blank" rel="noopener noreferrer"
                           class="inline-flex items-center gap-2 px-4 py-2 bg-gradient-to-br from-accent to-slate-700 text-white rounded-lg hover:opacity-90 transition-all duration-200">
                            <i class="fab fa-github"></i>
                            GitHub
                        </a>
                        {{/if}}
                        {{#if social.linkedin}}
                        <a href="https://linkedin.com/in/{{social.linkedin}}" target="_blank" rel="noopener noreferrer"
                           class="inline-flex items-center gap-2 px-4 py-2 bg-gradient-to-br from-accent to-slate-700 text-white rounded-lg hover:opacity-90 transition-all duration-200">
                            <i class="fab fa-linkedin"></i>
                            LinkedIn
                        </a>
                        {{/if}}
                    </div>
                </div>
            </div>
        </section>
    </main>

    {{> footer}}

    {{> scripts}}
    
    <!-- D3.js and jQuery for language visualization -->
    <script src="https://d3js.org/d3.v7.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    
    <!-- Language Chart Styles -->
    <style>
        .treemap-cell {
            cursor: pointer;
            transition: all 0.2s ease;
        }
        
        .treemap-cell:hover {
            /* Removed border effect for better text readability */
        }
        
        .treemap-text {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            font-weight: 600;
            text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);
        }
        
        .language-tooltip {
            position: absolute;
            background: rgba(0, 0, 0, 0.9);
            color: white;
            padding: 10px 15px;
            border-radius: 8px;
            font-size: 14px;
            pointer-events: none;
            opacity: 0;
            transition: opacity 0.2s;
            z-index: 1000;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
        }
        
        .error-message {
            text-align: center;
            color: #dc2626;
            padding: 20px;
            background: #fef2f2;
            border-radius: 8px;
            margin: 20px 0;
        }
    </style>
    
    <!-- Language Chart Script -->
    <script>
        // Configuration
        const WAKATIME_API_URL = 'https://wakatime.com/share/@icydemon/c25fdb5b-80a8-4a56-add6-7720fccbf284.json';
        const CHART_WIDTH = 600;
        const CHART_HEIGHT = 400;
        
        // Global variables
        let languageData = [];
        let svg, tooltip;
        
        // Language color mapping
        const languageColors = {
            'PHP': '#4F5D95',
            'C#': '#178600',
            'JavaScript': '#f1e05a',
            'YAML': '#cb171e',
            'Markdown': '#083fa1',
            'JSON': '#292929',
            'TypeScript': '#3178c6',
            'Smarty': '#f0c040',
            'SQL': '#e38c00',
            'Text': '#16ce40',
            'C': '#555555',
            'Gherkin': '#5B2063',
            'Other': '#dc9658',
            'C++': '#f34b7d',
            'Docker': '#d62728',
            'XML': '#0060ac',
            'HTML': '#e34c26',
            'Vue.js': '#9467bd',
            'Bash': '#8c564b',
            'Shell Script': '#aec7e8',
            'Python': '#3572A5',
            'Java': '#b07219',
            'Go': '#00ADD8',
            'Rust': '#dea584',
            'Ruby': '#701516',
            'Swift': '#FA7343',
            'Kotlin': '#7F52FF',
            'Scala': '#DC322F',
            'Clojure': '#5881D8',
            'Haskell': '#5D4F85',
            'Elixir': '#6B4E7D',
            'Erlang': '#A90533',
            'F#': '#b845fc',
            'OCaml': '#EC6813',
            'R': '#276DC3',
            'MATLAB': '#e16737',
            'Julia': '#9558B2',
            'Lua': '#000080',
            'Perl': '#0298c3',
            'Dart': '#00B4AB',
            'Solidity': '#AA6746',
            'Assembly': '#6E4C13',
            'Objective-C': '#438eff',
            'Flutter': '#02569B',
            'React': '#61DAFB',
            'Vue': '#4FC08D',
            'Angular': '#DD0031',
            'Node.js': '#339933',
            'Express': '#000000',
            'Next.js': '#000000',
            'Nuxt.js': '#00C58E',
            'Svelte': '#FF3E00',
            'Ember': '#E04E39',
            'Backbone': '#0071B5',
            'jQuery': '#0769AD',
            'Bootstrap': '#7952B3',
            'Tailwind CSS': '#06B6D4',
            'Sass': '#CC6699',
            'Less': '#1D365D',
            'Stylus': '#ff6347',
            'PostCSS': '#DD3A0A',
            'Webpack': '#8DD6F9',
            'Vite': '#646CFF',
            'Parcel': '#F2B8E6',
            'Rollup': '#EC4A3F',
            'Babel': '#F9DC3E',
            'ESLint': '#4B32C3',
            'Prettier': '#F7B93E',
            'Jest': '#C21325',
            'Mocha': '#8D6748',
            'Chai': '#A30701',
            'Cypress': '#17202C',
            'Playwright': '#2EAD69',
            'Puppeteer': '#40B5A4',
            'Selenium': '#43B02A',
            'WebDriver': '#43B02A',
            'Protractor': '#ED1A3A',
            'Karma': '#0C9D58',
            'Jasmine': '#8A4182',
            'QUnit': '#2E5266',
            'Ava': '#4B4B77',
            'Tape': '#7D5BA6',
            'Sinon': '#C21325',
            'Lodash': '#3492FF',
            'Underscore': '#0371B5',
            'Moment.js': '#2D5A27',
            'Day.js': '#FF6B35',
            'Luxon': '#F2B8E6',
            'date-fns': '#E04E39',
            'Ramda': '#77D4F1',
            'Immutable': '#E6B91E',
            'MobX': '#FF9955',
            'Redux': '#764ABC',
            'Vuex': '#4FC08D',
            'Pinia': '#FFD859',
            'Zustand': '#FF6B6B',
            'Jotai': '#FF6B6B',
            'Recoil': '#FF6B6B',
            'Apollo': '#311C87',
            'GraphQL': '#E10098',
            'Relay': '#F26B00',
            'Prisma': '#0c344b',
            'Sequelize': '#52B0E7',
            'TypeORM': '#262627',
            'Mongoose': '#880000',
            'Knex.js': '#E97627',
            'Bookshelf': '#2C3E50',
            'Waterline': '#2C3E50',
            'Objection': '#2C3E50',
            'MikroORM': '#2C3E50',
            'Drizzle': '#2C3E50',
            'Supabase': '#3ECF8E',
            'Firebase': '#FFCA28',
            'AWS': '#FF9900',
            'Azure': '#0078D4',
            'GCP': '#4285F4',
            'Heroku': '#430098',
            'Vercel': '#000000',
            'Netlify': '#00C7B7',
            'Railway': '#0B0D0E',
            'Render': '#46E3B7',
            'DigitalOcean': '#0080FF',
            'Linode': '#00A95C',
            'Vultr': '#007BFF',
            'Cloudflare': '#F38020',
            'Fastly': '#FF282D'
        };
        
        // Initialize the application
        function initLanguageChart() {
            svg = d3.select("#language-chart-container");
            tooltip = d3.select("body").append("div")
                .attr("class", "language-tooltip")
                .style("opacity", 0);
            loadLanguageData();
        }
        
        // Load language data from WakaTime API
        function loadLanguageData() {
            showLoading();
            
            $.ajax({
                type: 'GET',
                url: WAKATIME_API_URL,
                dataType: 'jsonp',
                success: function(response) {
                    console.log('WakaTime API Response:', response);
                    processLanguageData(response.data);
                    hideLoading();
                    updateLastUpdated();
                },
                error: function(xhr, status, error) {
                    console.error('Error fetching data:', error);
                    showError('Failed to load language data. Please try again.');
                    hideLoading();
                }
            });
        }
        
        // Process the language data from WakaTime
        function processLanguageData(data) {
            if (!data || !Array.isArray(data)) {
                showError('Invalid data format received from WakaTime API.');
                return;
            }
            
            // Filter out languages with 0% usage and sort by percentage
            const allLanguages = data
                .filter(d => d.percent > 0)
                .sort((a, b) => b.percent - a.percent);
            
            // Take top 20 languages
            const top20 = allLanguages.slice(0, 20);
            
            // Calculate "Others" percentage for remaining languages
            const othersPercent = allLanguages.slice(20).reduce((sum, lang) => sum + lang.percent, 0);
            
            // Create final data array
            languageData = top20.map(d => ({
                name: d.name,
                percent: d.percent,
                color: getLanguageColor(d.name)
            }));
            
            // Add "Others" category if there are remaining languages
            if (othersPercent > 0) {
                languageData.push({
                    name: 'Others',
                    percent: othersPercent,
                    color: '#6B7280' // Gray color for "Others"
                });
            }
            
            console.log('Processed language data (top 20 + others):', languageData);
            createTreemap();
        }
        
        // Get color for a language
        function getLanguageColor(languageName) {
            return languageColors[languageName] || generateColor(languageName);
        }
        
        // Generate a consistent color for unknown languages
        function generateColor(languageName) {
            let hash = 0;
            for (let i = 0; i < languageName.length; i++) {
                hash = languageName.charCodeAt(i) + ((hash << 5) - hash);
            }
            const hue = Math.abs(hash) % 360;
            return `hsl(${hue}, 70%, 50%)`;
        }
        
        // Create the treemap visualization
        function createTreemap() {
            svg.selectAll("*").remove();
            
            const svgElement = svg.append("svg")
                .attr("width", CHART_WIDTH)
                .attr("height", CHART_HEIGHT);
            
            const treemap = d3.treemap()
                .size([CHART_WIDTH, CHART_HEIGHT])
                .padding(2)
                .round(true);
            
            const root = d3.hierarchy({children: languageData})
                .sum(d => d.percent);
            
            treemap(root);
            
            const cells = svgElement.selectAll(".treemap-cell")
                .data(root.leaves())
                .enter().append("g")
                .attr("class", "treemap-cell")
                .attr("transform", d => `translate(${d.x0},${d.y0})`);
            
            cells.append("rect")
                .attr("width", d => d.x1 - d.x0)
                .attr("height", d => d.y1 - d.y0)
                .attr("fill", d => d.data.color)
                .attr("stroke", "white")
                .attr("stroke-width", 1)
                .on("mouseover", function(event, d) {
                    d3.select(this).attr("opacity", 0.8);
                    showTooltip(event, d);
                })
                .on("mouseout", function() {
                    d3.select(this).attr("opacity", 1);
                    hideTooltip();
                });
            
            // Add text labels for larger cells
            cells.append("text")
                .attr("x", d => (d.x1 - d.x0) / 2)
                .attr("y", d => (d.y1 - d.y0) / 2)
                .attr("text-anchor", "middle")
                .attr("dominant-baseline", "middle")
                .attr("class", "treemap-text")
                .attr("font-size", d => Math.min(14, Math.max(8, (d.x1 - d.x0) / 8)))
                .attr("fill", "white")
                .text(d => {
                    const width = d.x1 - d.x0;
                    const height = d.y1 - d.y0;
                    const minSize = Math.min(width, height);
                    
                    if (minSize > 40) {
                        return d.data.name;
                    } else if (minSize > 25) {
                        return d.data.name.length > 8 ? d.data.name.substring(0, 8) + '...' : d.data.name;
                    }
                    return '';
                });
            
            // Add percentage labels for very large cells
            cells.append("text")
                .attr("x", d => (d.x1 - d.x0) / 2)
                .attr("y", d => (d.y1 - d.y0) / 2 + 12)
                .attr("text-anchor", "middle")
                .attr("dominant-baseline", "middle")
                .attr("class", "treemap-text")
                .attr("font-size", d => Math.min(12, Math.max(8, (d.x1 - d.x0) / 10)))
                .attr("fill", "white")
                .text(d => {
                    const width = d.x1 - d.x0;
                    const height = d.y1 - d.y0;
                    const minSize = Math.min(width, height);
                    
                    if (minSize > 60 && d.data.percent > 1) {
                        return `${d.data.percent.toFixed(1)}%`;
                    }
                    return '';
                });
        }
        
        // Show tooltip
        function showTooltip(event, d) {
            tooltip.transition().duration(200).style("opacity", 1);
            tooltip.html(`
                <div style="font-weight: bold; margin-bottom: 4px;">${d.data.name}</div>
                <div>${d.data.percent.toFixed(2)}%</div>
            `)
            .style("left", (event.pageX + 10) + "px")
            .style("top", (event.pageY - 10) + "px");
        }
        
        // Hide tooltip
        function hideTooltip() {
            tooltip.transition().duration(200).style("opacity", 0);
        }
        
        // Show loading state
        function showLoading() {
            document.getElementById('loading').style.display = 'flex';
        }
        
        // Hide loading state
        function hideLoading() {
            document.getElementById('loading').style.display = 'none';
        }
        
        // Show error message
        function showError(message) {
            const chartContainer = document.getElementById('language-chart-container');
            chartContainer.innerHTML = `
                <div class="error-message">
                    <strong>Error:</strong> ${message}
                </div>
            `;
        }
        
        // Update last updated timestamp
        function updateLastUpdated() {
            const now = new Date();
            const timeString = now.toLocaleTimeString();
        }
        
        // Initialize when DOM is ready
        $(document).ready(function() {
            initLanguageChart();
            
            // Add refresh button functionality
            $('#refresh-languages').on('click', function() {
                loadLanguageData();
            });
        });
    </script>
</body>
</html>
